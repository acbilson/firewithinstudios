.container {
	display: grid;
	// columns have two variable sidebar slots and fills the center
	grid-template-columns:
		[leftedge] 10% [leftbar] 10%
		[leftmidbar] 1fr [rightmidbar]
		10% [rightbar] 10% [rightedge];

	// rows fit header to its content, with a fixed footer and fill the center
	grid-template-rows:
		[topedge] auto
		[topbar] 1fr [bottombar]
		$base-size * 12 [bottomedge];

	// centers cell contents by default
	place-items: center;

	// the center, absent both sidebars and header/footer
	&-center {
		grid-column-start: leftmidbar;
		grid-column-end: rightmidbar;
		grid-row-start: topbar;
		grid-row-end: bottombar;
	}

	// all cells except the right sidebar and the footer
	&-full {
		grid-column-start: leftedge;
		grid-column-end: rightbar;
		grid-row-start: topedge;
		grid-row-end: bottombar;

		// start at the top
		align-self: start;
	}

	&-header {
		grid-column-start: rightbar;
		grid-column-end: rightedge;
		grid-row-start: topbar;
		grid-row-end: bottombar;

		// places header at the top of its cell
		align-self: start;
	}

	&-footer {
		grid-column-start: leftedge;
		grid-column-end: rightedge;
		grid-row-start: bottombar;
		grid-row-end: bottomedge;
	}

	@media screen and (max-width: $breakpoint-lg) {
		// inner sidebars collapse
		grid-template-columns:
			[leftedge] 15% [leftbar] 0
			[leftmidbar] 1fr [rightmidbar]
			0 [rightbar] 15% [rightedge];
	}

	@media screen and (max-width: $breakpoint-md) {
		// all sidebars collapse
		grid-template-columns:
			[leftedge] 0 [leftbar] 0
			[leftmidbar] 1fr [rightmidbar]
			0 [rightbar] 0 [rightedge];

		// makes header the entire screen size
		&-header {
			grid-column-start: leftedge;
			grid-column-end: rightedge;
			grid-row-start: topedge;
			grid-row-end: bottomedge;

			place-items: center;
		}
	}
}
